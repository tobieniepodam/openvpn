#!/bin/sh 
# 
# /etc/rc.d/rc.openvpn 
# 
# Start/stop/restart the openvpn daemon. 
#
# By default, this script will start/stop/restart a daemon for every *.conf
# file found in /etc/openvpn.
#
# To work with a single connection, add the name of the config file:
# /etc/rc.d/rc.openvpn start configfile.conf
#
# You may also use a config file not found in /etc/openvpn by providing a
# complete path:
# /etc/rc.d/rc.openvpn start /path/to/some/other/configfile.conf
#
# The name of a config file provided with a complete path should not match
# the name of any config file present in the /etc/openvpn directory.



get_conf_val() {
  local val=$(grep -P "^$comment$2" "$1" | tail -n1 | cut -d' ' -f2)
  test -n "$val" && echo $val || echo $3
}

ip_tun_tap() {
  grep "$2:" /proc/net/dev 1>/dev/null || return
  ip tuntap $1 dev $2 mode $3 \
    && test $1 = 'add' \
    && ip link set $2 up promisc on
}

br_if() {
  grep "$2:" /proc/net/dev 1>/dev/null && ! brctl show $2 | grep $3 1>/dev/null || return
  brctl "${1}if" $2 $3
}

ovpn_start() {
  if [ -x /usr/sbin/openvpn ]; then
    if [ -z "$1" ]; then # start OpenVPN for all config files:
      find /etc/openvpn -type f -name '*.openvpn' | while read config; do
        #dev=$(get_conf_val "$config" 'dev')
        #if [ -z "$dev" ]; then
        #  echo "No dev directive in $config file. Skipped."
        #  continue
        #fi
        #mode=${dev:0:3}
        #ip_tun_tap 'add' "$dev" "$mode"
        #if [ "$mode" = 'tap' ]; then
        #  br=$(get_conf_val $config ';br')
        #  if [ -n "$br" ]; then br_if 'add' $br $dev; fi
        #fi
        f=$(basename $config|rev|cut -d. -f2-|rev)
        cmd="/usr/sbin/openvpn --user nobody --group nobody --config $config --daemon openvpn-$f --writepid /var/run/openvpn/$f.pid --verb 1"
        echo "Starting OpenVPN:  $cmd"
        if $cmd; then
          dev=$(get_conf_val "$config" 'dev')
          mode=${dev:0:3}
          if [ "$mode" = 'tap' ]; then
            br=$(get_conf_val $config ';br')
            test -n "$br" && grep "$2:" /proc/net/dev 1>/dev/null && ! brctl show $2 | grep $3 1>/dev/null || continue
            brctl "addif" $br $dev
          fi
        fi
      done
    else # start OpenVPN for one config file:
      if [ -r "$1" ]; then
        f=$(basename $1|rev|cut -d. -f2-|rev)
        cmd="/usr/sbin/openvpn --user nobody --group nobody --config $1 --daemon openvpn-$f --writepid /var/run/openvpn/$f.pid --verb 1"
        echo "Starting OpenVPN:  $cmd"
        $cmd
      else # config file is missing:
        echo "Error starting OpenVPN: config file $1 is missing."
      fi
    fi
  fi
}

ovpn_stop() { 
  # Note: OpenVPN has a bad habit of leaving stale pid files around when exiting.
  # Maybe it would be better to just use killall unless called for one config?
  if [ -z "$1" ]; then # stop OpenVPN for all pid files:
    if /bin/ls /var/run/openvpn/*.pid 1> /dev/null 2> /dev/null ; then
      for pid in /var/run/openvpn/*.pid ; do
        echo "Stopping OpenVPN for pid file $pid..."
        kill $(cat $pid)
        rm -f $pid
      done
    else
      echo "Warning: no pid files found in /var/run/openvpn. Using killall to stop any OpenVPN processes."
      killall openvpn
    fi
  else # stop OpenVPN for one config file:
    pid=/var/run/openvpn/$(basename $1|rev|cut -d. -f2-|rev).pid
    if [ -r $pid ]; then
      echo "Stopping OpenVPN for config file ${1}..."
      kill $(cat $pid)
      rm -f $pid
    else
      echo "Error stopping OpenVPN: no such pid file $pid"
    fi
  fi
}

ovpn_restart() {
  if [ ! -z "$1" ]; then # restart for all config files:
    ovpn_stop
    sleep 2
    ovpn_start
  else # restart for one config file only:
    ovpn_stop $1
    sleep 2
    ovpn_start $1
  fi
}

ovpn_status() {
  if /bin/ls /var/run/openvpn/*.pid 1> /dev/null 2> /dev/null ; then
    echo "Currently running OpenVPN processes according to .pid files in /var/run/openvpn:"
    for pid in /var/run/openvpn/*.pid ; do
      echo "  $(basename $pid) ($(cat $pid))"
    done
  else
    echo "No .pid files found in /var/run/openvpn." 
  fi
}

# Create PID directory if it doesn't exist:
if [ ! -d /var/run/openvpn ]; then
  mkdir -p /var/run/openvpn
fi

case "$1" in
'start')
  ovpn_start $2
  ;;
'stop')
  ovpn_stop $2
  ;;
'restart')
  ovpn_restart $2
  ;;
'status')
  ovpn_status
  ;;
*)
  echo "Usage: $0 {start|stop|restart}"
esac

